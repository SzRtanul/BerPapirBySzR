/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hu.szamalk.main;

import hu.szamalk.model.CsatolmanyNelkuliNevRekord;
import hu.szamalk.model.EmailService;
import hu.szamalk.model.InaktivNevRekord;
import hu.szamalk.model.LevelRekord;
import hu.szamalk.model.ModelGUIControlInterface;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import javax.swing.BoxLayout;
import javax.swing.JPanel;

/**
 *
 * @author Roland
 */
public class MainGUI extends javax.swing.JFrame implements ModelGUIControlInterface{
    public static ModelGUIControlInterface notice;
    static String path;
    
    private static EmailService email;
    JPanel[] jPanels;
    
    
    // Névcsoport
    public static String[][] nevEmailMunkaviszony; // Adatbázis
    public static boolean[] kijelol;
    public static boolean[] rendbenvan;
    public static boolean[] inaktivalt;
    public static int[] sorszam;
    public static int[][] csatolmanyok;
    public static String[][] csatolmanyFajlNevek;
    
   // static String[][] Jogviszonyok;
    // Csatolmánycsoport
    public static String[] FileList;
    public static String[][] separatedFiles;
    public static int[] tartozik;
   // static int[] fileRendbenVan;
    
    //int[] sorszam;
    // Összegzés
    
    //Update
    
    
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        jTabbedPane1.setEnabledAt(1, false);
        email = new EmailService("smtp.gmail.com", "465", "elekt843@gmail.com", "xlns bjfp mdwq wfgf");
        jPanels = new JPanel[]{Pn_withcsatm, Pn_withoutcsatm, Pn_kivontCsatolmanyok, Pn_kivontCimzettek};
        
        for (int i = 0; i < jPanels.length; i++) {
            jPanels[i].setLayout(new BoxLayout(jPanels[i], BoxLayout.Y_AXIS));
        }
        path = "files";
        //nevEmail
        updateNames();
        FileList = getFileList();
        updateAttachments();
        
        for (int i = 0; i < jPanels.length; i++) {
            updateJPanelHeight(jPanels[i]);
        }
        notice = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        La_KukazottNevek1 = new javax.swing.JLabel();
        La_CsatolmanyNelkuliLevelek1 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        Bt_sendAllMail = new javax.swing.JButton();
        La_KukazottNevek2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Pn_withcsatm = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Pn_withoutcsatm = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Pn_kivontCimzettek = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Pn_kivontCsatolmanyok = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Névlista frissítse");

        jButton2.setText("Csatolmánylista frissítése");

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(0, 30));

        jPanel4.setBackground(new java.awt.Color(255, 0, 255));

        La_KukazottNevek1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        La_KukazottNevek1.setText("Küldés alól kivont csatolmányok:");

        La_CsatolmanyNelkuliLevelek1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        La_CsatolmanyNelkuliLevelek1.setText("Csatolmány nélküli levelek:");

        jCheckBox2.setText("Összes kijelölése");

        Bt_sendAllMail.setText("Összes levél elküldése");
        Bt_sendAllMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_sendAllMailActionPerformed(evt);
            }
        });

        La_KukazottNevek2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        La_KukazottNevek2.setText("Küldés alól kivont levelek:");

        jButton3.setText("Kijelölt levelek elküldése");
        jButton3.setToolTipText("");
        jButton3.setActionCommand("Kijelölt levelek elküldése");

        jButton4.setText("Kijelölt levelek törlése");

        Pn_withcsatm.setBackground(new java.awt.Color(102, 255, 51));
        Pn_withcsatm.setPreferredSize(new java.awt.Dimension(191, 749));
        Pn_withcsatm.setLayout(new javax.swing.BoxLayout(Pn_withcsatm, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(Pn_withcsatm);

        Pn_withoutcsatm.setBackground(new java.awt.Color(255, 153, 153));
        Pn_withoutcsatm.setAutoscrolls(true);
        Pn_withoutcsatm.setMaximumSize(new java.awt.Dimension(450, 32767));
        Pn_withoutcsatm.setMinimumSize(new java.awt.Dimension(350, 150));
        Pn_withoutcsatm.setPreferredSize(new java.awt.Dimension(450, 150));
        Pn_withoutcsatm.setLayout(new javax.swing.BoxLayout(Pn_withoutcsatm, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane2.setViewportView(Pn_withoutcsatm);

        Pn_kivontCimzettek.setBackground(new java.awt.Color(153, 153, 153));
        Pn_kivontCimzettek.setAutoscrolls(true);
        Pn_kivontCimzettek.setMaximumSize(new java.awt.Dimension(450, 32767));
        Pn_kivontCimzettek.setMinimumSize(new java.awt.Dimension(350, 150));
        Pn_kivontCimzettek.setPreferredSize(new java.awt.Dimension(450, 150));

        javax.swing.GroupLayout Pn_kivontCimzettekLayout = new javax.swing.GroupLayout(Pn_kivontCimzettek);
        Pn_kivontCimzettek.setLayout(Pn_kivontCimzettekLayout);
        Pn_kivontCimzettekLayout.setHorizontalGroup(
            Pn_kivontCimzettekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        Pn_kivontCimzettekLayout.setVerticalGroup(
            Pn_kivontCimzettekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(Pn_kivontCimzettek);

        Pn_kivontCsatolmanyok.setBackground(new java.awt.Color(153, 153, 153));
        Pn_kivontCsatolmanyok.setAutoscrolls(true);
        Pn_kivontCsatolmanyok.setMaximumSize(new java.awt.Dimension(450, 32767));
        Pn_kivontCsatolmanyok.setMinimumSize(new java.awt.Dimension(350, 150));
        Pn_kivontCsatolmanyok.setPreferredSize(new java.awt.Dimension(350, 150));

        javax.swing.GroupLayout Pn_kivontCsatolmanyokLayout = new javax.swing.GroupLayout(Pn_kivontCsatolmanyok);
        Pn_kivontCsatolmanyok.setLayout(Pn_kivontCsatolmanyokLayout);
        Pn_kivontCsatolmanyokLayout.setHorizontalGroup(
            Pn_kivontCsatolmanyokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        Pn_kivontCsatolmanyokLayout.setVerticalGroup(
            Pn_kivontCsatolmanyokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(Pn_kivontCsatolmanyok);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(La_CsatolmanyNelkuliLevelek1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(La_KukazottNevek1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(La_KukazottNevek2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addComponent(Bt_sendAllMail)
                    .addComponent(jScrollPane1))
                .addGap(19, 19, 19))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(jButton3)
                            .addComponent(jButton4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(La_CsatolmanyNelkuliLevelek1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(La_KukazottNevek2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(La_KukazottNevek1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bt_sendAllMail)
                .addGap(12, 12, 12))
        );

        jTabbedPane1.addTab("Levél küldés", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 972, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 684, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Címzettek kezelése", jPanel3);

        jButton5.setText("Nevek betöltése .csv fájlból");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(520, 520, 520)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1205, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void updateJPanelHeight(JPanel panel){
        panel.setPreferredSize(panel.getLayout().minimumLayoutSize(panel));
        panel.revalidate();
        panel.repaint();
    }
    
    private String[][] updateNames(){
        String[][] nevEmailMunkaviszonyIDG = new String[][]{
            {"Szabó Roland", "rolandszb111@gmail.com", "9820"},
            {"Felföldi János", "janikahuszar666@gmail.com", "9941"},
            {"Szabó Roland 1", "szrtanu@gmail.com", "9941"},
        };
        
       // Hozzáadás vagy frissítés
        if(false){
            clearPanels();
        }
        
        /*Jogviszonyok = new String[][]{
            {"003","004"},
            {"003"}
        };*/
        
        
         try {
            String[] sorok = Files.lines(Paths.get("BookOfTony.csv")).toArray(String[]::new);
            nevEmailMunkaviszony = new String[sorok.length][3];
            for(int i = 0; i<sorok.length; i++) {
              String[] data = sorok[i].split(";");
                for (int j = 0; j < 2 && j < data.length; j++) {
                    nevEmailMunkaviszony[i][j] = data[j];
                }
            }
        } catch (IOException e) {
            System.out.println("An error occurred.");
        }
        kijelol = new boolean[nevEmailMunkaviszony.length];
        rendbenvan = new boolean[nevEmailMunkaviszony.length];
        inaktivalt = new boolean[nevEmailMunkaviszony.length];
        sorszam = new int[nevEmailMunkaviszony.length];
        tartozik = new int[nevEmailMunkaviszony.length];
        return nevEmailMunkaviszonyIDG;
    }
    
    private void clearPanels(){
        for (int i = 0; i < jPanels.length; i++) {
            jPanels[i].removeAll();
            updateJPanelHeight(jPanels[i]);
            jPanels[i].repaint();
        }
    }
    
    private void updateAttachments(){
        clearPanels();
        csatolmanyok = new int[nevEmailMunkaviszony.length][5];
        csatolmanyFajlNevek = new String[nevEmailMunkaviszony.length][5];
        
        sorszam = new int[nevEmailMunkaviszony.length];
        int kezd = 0;
        for (int i = 0; i < nevEmailMunkaviszony.length; i++) {
            // Csatolmány hozzárendelés
            int j = kezd;
            int meret = 0;
            for (;j < FileList.length; j++) {
                boolean gd = separatedFiles[j][0].toLowerCase().equals(nevEmailMunkaviszony[i][0].toLowerCase());
                if(gd && meret >= FileList.length){
                    int[] uttomb = new int[FileList.length +5];
                    String[] ujtomb = new String[FileList.length +5];
                    System.arraycopy(csatolmanyok[i], 0, uttomb, 0, csatolmanyok[i].length);
                    System.arraycopy(csatolmanyFajlNevek[i], 0, uttomb, 0, csatolmanyFajlNevek[i].length);
                    csatolmanyok[i] = uttomb;
                    csatolmanyFajlNevek[i] = ujtomb;
                }
                csatolmanyok[i][meret] = gd ? j : 0;
                csatolmanyFajlNevek[i][meret] = gd ? FileList[j] : "";
                meret += gd ? 1 : 0;
            }
            csatolmanyok[i] = Arrays.copyOf(csatolmanyok[i], meret);
            csatolmanyFajlNevek[i] = Arrays.copyOf(csatolmanyFajlNevek[i], meret);
            kezd = j < FileList.length ? j : kezd;
           // tar.setLocation(13, i * tar.getHeight() + 3);
            if (inaktivalt[i] == false) {
                if(csatolmanyok[i].length > 0){
                    Pn_withcsatm.add(new LevelRekord(i, csatolmanyok[i]));
                }
                else{
                    Pn_withoutcsatm.add(new CsatolmanyNelkuliNevRekord(i));
                }
            }
            else{
                Pn_kivontCimzettek.add(new InaktivNevRekord());
            }
        }
        for (int i = 0; i < jPanels.length; i++) {
            updateJPanelHeight(jPanels[i]);
        }
    }
    
    public static boolean doKuld(int nevHely){
        System.out.println(nevHely + "");
        try {
            System.out.println(nevEmailMunkaviszony[nevHely][1]);
            email.sendMail(nevEmailMunkaviszony[nevHely][1], 
                    "Bérpapír 2025-06", "<p>Kedves Diák!</p><p>A e-mail mellékelten a Bérpapírokat tartalmazza.</p>", "files/", csatolmanyFajlNevek[nevHely]);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return false;
        }
        return true;
    }
    
    private boolean tryParseToInt(String value){
        try {
            Integer.valueOf(value);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }
    
    private String[] getFileList(){
        //file
        File folder = new File(path);
        File[] listOfFiles = folder.listFiles();
        if(listOfFiles != null) {
            String[] privFileList = new String[listOfFiles.length];
            separatedFiles = new String[listOfFiles.length][];
            for (int i = 0, c = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()) {
                    privFileList[c] = listOfFiles[i].getName();
                    separatedFiles[i] = listOfFiles[i].getName().split("\\.")[0].split("_");
                    c++;
                }
            }
            return privFileList;
        }
        return new String[0];
    }
    
    private void Bt_sendAllMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_sendAllMailActionPerformed
        for (int i = 0; i < nevEmailMunkaviszony.length; i++) {
            if(csatolmanyok[i].length > 0 && !inaktivalt[i]) doKuld(i);
        }
    }//GEN-LAST:event_Bt_sendAllMailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bt_sendAllMail;
    private javax.swing.JLabel La_CsatolmanyNelkuliLevelek1;
    private javax.swing.JLabel La_KukazottNevek1;
    private javax.swing.JLabel La_KukazottNevek2;
    private javax.swing.JPanel Pn_kivontCimzettek;
    private javax.swing.JPanel Pn_kivontCsatolmanyok;
    private javax.swing.JPanel Pn_withcsatm;
    private javax.swing.JPanel Pn_withoutcsatm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void doUpdate() {
        //clearPanels();
        updateAttachments();
    }

    @Override
    public void doUpdateOneElement(int where) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
